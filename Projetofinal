import requests  "dei um pip install notify e pip install requests"
from notifypy import Notify

def alerta(mensagem): """alertas usando Notify."""
    notification = Notify()
    notification.title = "Alerta"
    notification.message = mensagem
    notification.send()

def fetch_data(url): """obtendo os dados da API"""
    try:
        response = requests.get(url)
        response.raise_for_status() "avisar se o status nao for 200"
        return response.json()
    except requests.exceptions.RequestException as e:
        alerta(f"Erro ao acessar a API: {e}")
        return None

# URLs da PokeAPI
base_url = "https://pokeapi.co/api/v2/pokemon"

'''Pegando os dados das tabelas - Tabela 1: Lista de Pokémon'''
def get_pokemon_list(limit=10):
    data = fetch_data(f"{base_url}?limit={limit}")
    if data:
        pokemons = [{"id": p["url"].split("/")[-2], "name": p["name"]} for p in data["results"]]
        return pokemons
    return []

'''Tabela 2: Tipos de cada Pokémon'''
def get_pokemon_types(pokemon_name):
    data = fetch_data(f"{base_url}/{pokemon_name}")
    if data:
        types = [t["type"]["name"] for t in data["types"]]
        return {"name": pokemon_name, "types": types}
    return {"name": pokemon_name, "types": []}

'''Tabela 3: Estatísticas básicas de cada Pokémon'''
def get_pokemon_stats(pokemon_name):
    data = fetch_data(f"{base_url}/{pokemon_name}")
    if data:
        stats = {stat["stat"]["name"]: stat["base_stat"] for stat in data["stats"]}
        return {"name": pokemon_name, "stats": stats}
    return {"name": pokemon_name, "stats": {}}

'''Testando as funções pra ver se funcionou'''
pokemon_list = get_pokemon_list(limit=5)
'''colocando as condicionais dos alertas'''
if not pokemon_list:
    alerta("Nenhum Pokémon encontrado. Verifique a conexão com a API.")
else:
    print("Tabela 1: Lista de Pokémon")
    print(pokemon_list)

    for pokemon in pokemon_list:
        types = get_pokemon_types(pokemon["name"])
        stats = get_pokemon_stats(pokemon["name"])
        if not types["types"]:
            alerta(f"Erro ao buscar tipos do Pokémon {pokemon['name']}.")
        if not stats["stats"]:
            alerta(f"Erro ao buscar estatísticas do Pokémon {pokemon['name']}.")
        
        print(f"Tabela 2: Tipos de {pokemon['name']}")
        print(types)
        print(f"Tabela 3: Estatísticas de {pokemon['name']}")
        print(stats)
